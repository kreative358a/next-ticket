import express from "express";
import { json } from "body-parser";
// import { Request, Response, NextFunction } from "express";
import mongoose from "mongoose";
// npm install @types/mongoose

// lek 150
import "express-async-errors";

// lek 175
import cookieSession from "cookie-session";

// const app = express();
// app.use(json());

// // lek 116
// app.get("/api/users/currentuser", (req, res) => {
//   res.send("Hi there!");
// });

// app.listen(3000, () => {
//   console.log("Listening on port 3000!!!");
// });

// lek 130
import { currentUserRouter } from "./routes/current-user";
// lek 131
import { signinRouter } from "./routes/signin";
import { signoutRouter } from "./routes/signout";
import { signupRouter } from "./routes/signup";

// lek 138
import { errorHandler } from "./middlewares/error-handler";
// lek 149
import { NotFoundError } from "./errors/not-found-error";

const app = express();
// lek 175
app.set("trust proxy", true);

app.use(json());

// lek 175
app.use(
  cookieSession({
    signed: false,
    secure: true,
    // maxAge: 15*60*1000
  })
);

app.use(currentUserRouter);
// lek 131
app.use(signinRouter);
app.use(signoutRouter);
app.use(signupRouter);

// lek 149
// app.all("*", () => {
//   throw new NotFoundError();
// });

// lek 150
app.all("*", async (req, res) => {
  throw new NotFoundError();
});
// app.all("*", async (req, res, next) => {
//   // throw new NotFoundError();
//   next(new NotFoundError());
// });

// lek 138
app.use(errorHandler);

// app.use((err: Error, req: Request, res: Response, next: NextFunction) => {
//   errorHandler(err, req, res, next);
// });

// lek 152
const start = async () => {
  // lek 180
  if (!process.env.JWT_KEY) {
    throw new Error("JWT_KEY must be defined");
  }

  try {
    await mongoose.connect("mongodb://auth-mongo-srv:27017/auth");

    console.log("Connected to MongoDb");
  } catch (err) {
    console.error(err);
  }
};

app.listen(3000, () => {
  console.log("Listening on port 3000 !!!");
});

start();
